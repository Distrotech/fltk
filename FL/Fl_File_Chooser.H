//
// "$Id$"
//
// Fl_File_Chooser dialog for the Fast Light Tool Kit (FLTK).
// FLTK 123 wrapper finished
//  - this class has no virtual functions, so we simply derive form FLTK3
//  - this file was originally generated by Fluid, later hand-edited
//
// Copyright 1998-2011 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

#ifndef Fl_File_Chooser_H
#define Fl_File_Chooser_H

#include <fltk3/FileChooser.h>
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Preferences.H>
#include <FL/Fl_Tile.H>
#include <FL/Fl_File_Browser.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_File_Input.H>
#include <FL/Fl_Return_Button.H>
#include <FL/fl_ask.H>


class FL_EXPORT Fl_File_Chooser : public fltk3::FileChooser {
  
  // make these private so they can't be accessed
  Fl_Button *newButton;
  Fl_Check_Button *previewButton;
  
public:
  
  enum { SINGLE = 0, MULTI = 1, CREATE = 2, DIRECTORY = 4 }; 
  
  Fl_File_Chooser(const char *d, const char *p, int t, const char *title)
  : fltk3::FileChooser(d, p, t, title) { 
    fltk3::FileBrowser *b3 = fltk3::FileChooser::browser();
    Fl_Widget *b1 = new Fl_File_Browser();
    b3->wrapper(b1);
    b1->_p = b3;
  }
  
  Fl_Widget* add_extra(Fl_Widget* gr) {
    fltk3::Widget *w3 = fltk3::FileChooser::add_extra(fltk3::_1to3_widget(gr));
    if (!w3->wrapper()) {
      Fl_Widget *w1 = new Fl_Widget();
      w3->wrapper(w1);
      w1->_p = w3;
    }
    return fltk3::_3to1_widget(w3);
  }
  
  Fl_File_Browser *browser(void) {
    return fltk3::_3to1_widget(fltk3::FileChooser::browser());
  }
  
};
        

FL_EXPORT char *fl_dir_chooser(const char *message,const char *fname,int relative=0) {
  return fltk3::dir_chooser(message, fname, relative);
}

FL_EXPORT char *fl_file_chooser(const char *message,const char *pat,const char *fname,int relative=0) {
  return fltk3::file_chooser(message, pat, fname, relative);
}

FL_EXPORT void fl_file_chooser_callback(void (*cb)(const char*)) {
  fltk3::file_chooser_callback(cb);
}

FL_EXPORT void fl_file_chooser_ok_label(const char*l) {
  fltk3::file_chooser_ok_label(l);
}

#endif

//
// End of "$Id$".
//
