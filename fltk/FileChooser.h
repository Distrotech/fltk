// generated by Fast Light User Interface Designer (fluid) version 2.0000

#ifndef fltk_FileChooser_h
#define fltk_FileChooser_h

#include <fltk/Window.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fltk/Choice.h>
#include <fltk/Button.h>
#include "filename.h"
#include <fltk/FileBrowser.h>
#include <fltk/FileInput.h>
#include <fltk/ReturnButton.h>

namespace fltk {

class FL_API FileChooser {
public:
  enum { SINGLE, MULTI, CREATE };
  FileChooser(const char *d, const char *p, int t, const char *title);
  Window *window;
private:
  inline void cb_window_i(Window*, void*);
  static void cb_window(Window*, void*);
  Choice *dirMenu;
  inline void cb_dirMenu_i(Choice*, void*);
  static void cb_dirMenu(Choice*, void*);
  Button *upButton;
  inline void cb_upButton_i(Button*, void*);
  static void cb_upButton(Button*, void*);
  Button *newButton;
  inline void cb_newButton_i(Button*, void*);
  static void cb_newButton(Button*, void*);
  inline void cb__i(Button*, void*);
  static void cb_(Button*, void*);
  FileBrowser *fileList;
  inline void cb_fileList_i(FileBrowser*, void*);
  static void cb_fileList(FileBrowser*, void*);
  FileInput *fileName;
  inline void cb_fileName_i(FileInput*, void*);
  static void cb_fileName(FileInput*, void*);
  ReturnButton *okButton;
  inline void cb_okButton_i(ReturnButton*, void*);
  static void cb_okButton(ReturnButton*, void*);
  inline void cb_Cancel_i(Button*, void*);
  static void cb_Cancel(Button*, void*);
  char directory_[1024];
  int type_;
  void fileListCB();
  void fileNameCB();
  void newdir();
  void up();
public:
  void color(Color c);
  Color color();
  int count();
  void directory(const char *d);
  char * directory();
  void exec();
  void filter(const char *p);
  const char * filter();
  void hide();
  void icon_size(uchar s);
  uchar icon_size();
  void label(const char *l);
  const char * label();
  void rescan();
  void textcolor(Color c);
  Color textcolor();
  void textfont(Font* f);
  Font* textfont();
  void textsize(uchar s);
  uchar textsize();
  void type(int t);
  int type();
  const char *text(int f = 1);
  void text(const char *filename);
  int visible();
};

}
#endif
