//
// "$Id$"
//

// 123 TODO: remove stray comments
// 123 TODO: add namespace statements
// 123 TODO: replace class name, constructors and destructor
// 123 TODO: add friend statement for Twin Class
// 123 TODO: add 'compat(FLTK2)' to constructors
// 123 TODO: add twin class with all constructors
// 123 TODO: change all arguments to the FLTK2 class name
// 123 TODO: change the source code to use the new class names
// 123 TODO: add casting to return values
// 123 TODO: move all FLTK2-only functions to the FLTK3 section and implement them
// 123 TODO: remove the FLTK1 and FLTK2 sections in the headers
// 123 TODO: 

//
// "$Id: Fl_Help_Dialog.H 6614 2009-01-01 16:11:32Z matt $"
//
// Fl_Help_Dialog dialog for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2009 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

/* \file
   Fl_Help_Dialog widget . */

// generated by Fast Light User Interface Designer (fluid) version 1.0108

#ifndef Fl_Help_Dialog_H
#define Fl_Help_Dialog_H
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Help_View.H>

class FL_EXPORT Fl_Help_Dialog {
  int index_; 
  int max_; 
  int line_[100]; 
  char file_[100][256]; 
  int find_pos_; 
public:
  Fl_Help_Dialog();
private:
  Fl_Double_Window *window_;
  Fl_Button *back_;
  void cb_back__i(Fl_Button*, void*);
  static void cb_back_(Fl_Button*, void*);
  Fl_Button *forward_;
  void cb_forward__i(Fl_Button*, void*);
  static void cb_forward_(Fl_Button*, void*);
  Fl_Button *smaller_;
  void cb_smaller__i(Fl_Button*, void*);
  static void cb_smaller_(Fl_Button*, void*);
  Fl_Button *larger_;
  void cb_larger__i(Fl_Button*, void*);
  static void cb_larger_(Fl_Button*, void*);
  Fl_Input *find_;
  void cb_find__i(Fl_Input*, void*);
  static void cb_find_(Fl_Input*, void*);
  Fl_Help_View *view_;
  void cb_view__i(Fl_Help_View*, void*);
  static void cb_view_(Fl_Help_View*, void*);
public:
  ~Fl_Help_Dialog();
  int h();
  void hide();
  void load(const char *f);
  void position(int xx, int yy);
  void resize(int xx, int yy, int ww, int hh);
  void show();
  void show(int argc, char **argv);
  void textsize(Fl_Fontsize s);
  Fl_Fontsize textsize();
  void topline(const char *n);
  void topline(int n);
  void value(const char *f);
  const char * value() const;
  int visible();
  int w();
  int x();
  int y();
};
#endif

//
// End of "$Id: Fl_Help_Dialog.H 6614 2009-01-01 16:11:32Z matt $".
//

/* suggested twin class
// This is the Twin Class to fltk::HelpDialog
class Fl_Help_Dialog : public fltk::HelpDialog {
public:
  Fl_Help_Dialog(int x, int t, int w, int h, const char *label=0)
  : fltk::HelpDialog(x, y, w, h, label), compat_(FLTK1) { }
};
*/

// ----- FLTK1 -----------------------------------------------------------------
#if 0
//
// "$Id: Fl_Help_Dialog.H 6614 2009-01-01 16:11:32Z matt $"
//
// Fl_Help_Dialog dialog for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2009 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

/* \file
   Fl_Help_Dialog widget . */

// generated by Fast Light User Interface Designer (fluid) version 1.0108

#ifndef Fl_Help_Dialog_H
#define Fl_Help_Dialog_H
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Help_View.H>

class FL_EXPORT Fl_Help_Dialog {
  int index_; 
  int max_; 
  int line_[100]; 
  char file_[100][256]; 
  int find_pos_; 
public:
  Fl_Help_Dialog();
private:
  Fl_Double_Window *window_;
  Fl_Button *back_;
  void cb_back__i(Fl_Button*, void*);
  static void cb_back_(Fl_Button*, void*);
  Fl_Button *forward_;
  void cb_forward__i(Fl_Button*, void*);
  static void cb_forward_(Fl_Button*, void*);
  Fl_Button *smaller_;
  void cb_smaller__i(Fl_Button*, void*);
  static void cb_smaller_(Fl_Button*, void*);
  Fl_Button *larger_;
  void cb_larger__i(Fl_Button*, void*);
  static void cb_larger_(Fl_Button*, void*);
  Fl_Input *find_;
  void cb_find__i(Fl_Input*, void*);
  static void cb_find_(Fl_Input*, void*);
  Fl_Help_View *view_;
  void cb_view__i(Fl_Help_View*, void*);
  static void cb_view_(Fl_Help_View*, void*);
public:
  ~Fl_Help_Dialog();
  int h();
  void hide();
  void load(const char *f);
  void position(int xx, int yy);
  void resize(int xx, int yy, int ww, int hh);
  void show();
  void show(int argc, char **argv);
  void textsize(Fl_Fontsize s);
  Fl_Fontsize textsize();
  void topline(const char *n);
  void topline(int n);
  void value(const char *f);
  const char * value() const;
  int visible();
  int w();
  int x();
  int y();
};
#endif

//
// End of "$Id: Fl_Help_Dialog.H 6614 2009-01-01 16:11:32Z matt $".
//
#endif
// ----- FLTK2 -----------------------------------------------------------------
#if 0
// generated by Fast Light User Interface Designer (fluid) version 2.0100

#ifndef HelpDialog_h
#define HelpDialog_h
// Header for //\n// "$Id: HelpDialog.fl 4721 2005-12-19 16:52:...
#include <fltk/DoubleBufferWindow.h>
#include <fltk/HelpView.h>
#include <fltk/Group.h>
#include <fltk/Button.h>
#include <fltk/Input.h>

namespace fltk  {

class FL_IMAGES_API HelpDialog  {
  int index_;
  int max_;
  int line_[100];
  char file_[100][256];
  int find_pos_;
public:
  HelpDialog();
private:
  fltk::DoubleBufferWindow *window_;
    fltk::HelpView *view_;
    inline void cb_view__i(fltk::HelpView*, void*);
    static void cb_view_(fltk::HelpView*, void*);
      inline void cb_Close_i(fltk::Button*, void*);
      static void cb_Close(fltk::Button*, void*);
      fltk::Button *back_;
      inline void cb_back__i(fltk::Button*, void*);
      static void cb_back_(fltk::Button*, void*);
      fltk::Button *forward_;
      inline void cb_forward__i(fltk::Button*, void*);
      static void cb_forward_(fltk::Button*, void*);
      fltk::Button *smaller_;
      inline void cb_smaller__i(fltk::Button*, void*);
      static void cb_smaller_(fltk::Button*, void*);
      fltk::Button *larger_;
      inline void cb_larger__i(fltk::Button*, void*);
      static void cb_larger_(fltk::Button*, void*);
        fltk::Input *find_;
        inline void cb_find__i(fltk::Input*, void*);
        static void cb_find_(fltk::Input*, void*);
public:
  ~HelpDialog();
  int h();
  void hide();
  void load(const char *f);
  void position(int xx, int yy);
  void resize(int xx, int yy, int ww, int hh);
  void show();
  void show(int argc, char **argv);
  void textsize(uchar s);
  uchar textsize();
  void topline(const char *n);
  void topline(int n);
  void value(const char *f);
  const char * value() const;
  int visible();
  int w();
  int x();
  int y();
};
}
// Header for //\n// End of "$Id: HelpDialog.fl 4721 2005-12-19...
#endif
#endif
// ----- END -------------------------------------------------------------------
//
// End of "$Id$"
//
