dnl# -*- sh -*-
dnl# the "configure" script is made from this by running GNU "autoconf"
dnl#
dnl# "$Id: configure.in,v 1.90 2001/07/10 08:14:38 clip Exp $"
dnl#
dnl# Configuration script for the Fast Light Tool Kit (FLTK).
dnl#
dnl# Copyright 1998-1999 by Bill Spitzak and others.
dnl#
dnl# This library is free software; you can redistribute it and/or
dnl# modify it under the terms of the GNU Library General Public
dnl# License as published by the Free Software Foundation; either
dnl# version 2 of the License, or (at your option) any later version.
dnl#
dnl# This library is distributed in the hope that it will be useful,
dnl# but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl# Library General Public License for more details.
dnl#
dnl# You should have received a copy of the GNU Library General Public
dnl# License along with this library; if not, write to the Free Software
dnl# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
dnl# USA.
dnl#
dnl# Please report all bugs and problems to "fltk-bugs@easysw.com".
dnl#

if test "configure" -ot "configure.in"; then
  echo "*** You must run autoconf first! ***"
  exit 1
fi

AC_INIT(src/Fl.cxx)

AC_PROG_RANLIB

LIBNAME="libfltk"
LIBEXT=".a"
if test "$RANLIB" != ":"; then
  LIBCOMMAND="ar cr"
else
  LIBCOMMAND="ar crs"
fi
DSOCFLAGS=""
DSOEXT=""
DSOSHORTEXT=""
DSOLIBS=""
THEMELIBS=""
dnl# Get the operating system and version number...

uname=`uname`
uversion=`uname -r | sed -e 's/-.*$//g;s/\.//g'`
dnl# uversion=`uname -r | sed -e '1,$s/\.//g'`
if test -z "$uname"; then uname="WIN32"; fi
if test "$uname" = "IRIX64"; then uname="IRIX"; fi

dnl# Clear debugging flags and only enable debugging if the user asks for
dnl# it.

LD="\${CXX}"
LDLIBS="-lX11 -lXext -lm"
FLLIB="../lib/libfltk${LIBEXT}"
FLGLLIB="../lib/libfltk_gl${LIBEXT}"
FLGLUTLIB="../lib/libfltk_glut${LIBEXT}"
FLFORMSLIB="../lib/libfltk_forms${LIBEXT}"
FLIMAGESLIB="../lib/libfltk_images${LIBEXT}"
DSOLIBNAME="libfltk"
DSOLIBimagesNAME="libfltk_images"
DSOLIBformsNAME="libfltk_forms"
DSOLIBglNAME="libfltk_gl"
DSOLIBglutNAME="libfltk_glut"
DSOEXT=".so.2"
DSOSHORTEXT=".so"
BUILDTARGETS="static programs"
INSTALLTARGETS="install_static install_programs"
DEBUGFLAG=""
CFLAGS="${CFLAGS:=}"
CXXFLAGS="${CXXFLAGS:=}"
SYSTYPE="UNIX"
EXEFLAGS=""
DSOCOMMAND=""
THEMECOMMAND=""
DSOCFLAGS=""
case $uname in
    SunOS* | UNIX_S*)
	  DSOCOMMAND="\${CXX} -Wl,-h,\${DSONAME} -G $DEBUGFLAG -o"
	  THEMECOMMAND="\${CXX} -G $DEBUGFLAG -o"
	  DSOCFLAGS="-KPIC"
	  ;;
    HP-UX*)
	  DSOCOMMAND="ld -b -z +h \${DSONAME} $DEBUGFLAG -o"
	  THEMECOMMAND="ld -b -z $DEBUGFLAG -o"
	  DSOEXT=".sl.2"
	  DSOSHORTEXT=".sl"
	  ;;
    CYGWIN* | WIN32)
          uname="WIN32"
	  CFLAGS="$CFLAGS -DWIN32"
	  CXXFLAGS="$CXXFLAGS -DWIN32"
	  LDLIBS="-lgdi32 -luser32 -lmsvcrt -lwsock32 -lws2_32 -lcomdlg32"
	  SYSTYPE="WIN32"
          DSOCFLAGS="-DFL_SHARED"
          DSOCOMMAND="\${CXX} -Wl,--out-implib,\$@.import -shared $DEBUGFLAG -o"
          THEMECOMMAND="\${CXX} -shared $DEBUGFLAG -o"
	  DSOLIBS="-lgdi32 -luser32 -lmsvcrt -lwsock32 -lws2_32 -lopengl32 -lglu32 -lcomdlg32"
	  THEMELIBS="-L ../lib -lfltk.2.dll"
          DSOLIBNAME="fltk"
          DSOLIBimagesNAME="fltk_images"
          DSOLIBformsNAME="fltk_forms"
          DSOLIBglNAME="fltk_gl"
          DSOLIBglutNAME="fltk_glut"
	  DSOEXT=".2.dll"
	  DSOSHORTEXT=""
	  ;;

    OSF1)
          echo Using OSF
          DSOCOMMAND="\${CXX} $DEBUGFLAG -o"
          THEMECOMMAND="\${CXX} $DEBUGFLAG -o"
          DSOCFLAGS="-DFL_SHARED"
	  ;;
    *)
          echo Using GNU GCC style shared libraries
          DSOCOMMAND="\${CXX} -Wl,-soname,\${DSONAME} -shared $DEBUGFLAG -o"
          THEMECOMMAND="\${CXX} -shared $DEBUGFLAG -o"
          DSOCFLAGS="-fPIC -DFL_SHARED"
	  ;;
esac

AC_ARG_ENABLE(debug, [  --enable-debug          compile with debug rather than optimized],[if eval "test x$enable_debug = xyes"; then
  DEBUGFLAG="-g "
fi])
AC_ARG_ENABLE(shared, [  --enable-shared         created shared libraries],[
if eval "test x$enable_shared = xyes"; then
  BUILDTARGETS="static shared programs"
  INSTALLTARGETS="install_static install_shared install_programs"
  FLLIB="../lib/libfltk${DSOEXT}"
  FLGLLIB="../lib/libfltk_gl${DSOEXT}"
  FLGLUTLIB="../lib/libfltk_glut${DSOEXT}"
  FLFORMSLIB="../lib/libfltk_forms${DSOEXT}"
  FLIMAGESLIB="../lib/libfltk_images${DSOEXT}"
  EXEFLAGS="-DFL_SHARED"
  case $uname in
    WIN32)
	  FLLIB="../lib/libfltk.2.dll.a"
	  FLGLLIB="../lib/libfltk_gl.2.dll.a"
	  FLGLUTLIB="../lib/libfltk_glut.2.dll.a"
	  FLFORMSLIB="../lib/libfltk_forms.2.dll.a"
	  FLIMAGESLIB="../lib/libfltk_images.2.dll.a"
	  ;;
  esac
fi])

AC_SUBST(LD)
AC_SUBST(LDLIBS)
AC_SUBST(FLLIB)
AC_SUBST(FLGLLIB)
AC_SUBST(FLGLUTLIB)
AC_SUBST(FLFORMSLIB)
AC_SUBST(FLIMAGESLIB)
AC_SUBST(DSOLIBS)
AC_SUBST(BUILDTARGETS)
AC_SUBST(INSTALLTARGETS)
AC_SUBST(THEMELIBS)
AC_SUBST(EXEFLAGS)

AC_PROG_CC
AC_PROG_CXX
dnl# AC_PROG_INSTALL

AC_LANG_CPLUSPLUS

AC_C_BIGENDIAN

AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
if test $ac_cv_sizeof_short -eq 2; then
    AC_DEFINE(U16,unsigned short)
fi
if test $ac_cv_sizeof_int -eq 4; then
    AC_DEFINE(U32,unsigned)
else
    if test $ac_cv_sizeof_long -eq 4; then
        AC_DEFINE(U32,unsigned long)
    fi
fi
if test $ac_cv_sizeof_int -eq 8; then
    AC_DEFINE(U64,unsigned)
else
    if test $ac_cv_sizeof_long -eq 8; then
        AC_DEFINE(U64,unsigned long)
    fi
fi

AC_HEADER_DIRENT
AC_CHECK_HEADER(sys/select.h)
AC_CHECK_FUNCS(scandir,
    if test "$uname" != "SunOS"; then
        AC_DEFINE(HAVE_SCANDIR)
    fi)
AC_CHECK_FUNCS(vsnprintf,
    if test "$uname" != "HP-UX"; then
        AC_DEFINE(HAVE_VSNPRINTF)
    fi)
AC_CHECK_FUNCS(snprintf,
    if test "$uname" != "HP-UX"; then
        AC_DEFINE(HAVE_SNPRINTF)
    fi)
AC_CHECK_FUNCS(strcasecmp)
AC_CHECK_FUNCS(vsprintf)

dnl# AC_CHECK_FUNCS(strtok_r)
dnl# this test is needed for Digital Unix, where C++ must be used?
AC_MSG_CHECKING([for strtok_r])
AC_TRY_LINK([#include <string.h>],[char *ptr; ptr=strtok_r("  ", ".", &ptr);],
[AC_DEFINE(HAVE_STRTOK_R) AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])]

AC_PATH_XTRA
dnl# echo "Ignoring libraries \"$X_PRE_LIBS\" requested by configure."

LIBS="$LIBS$X_LIBS"
CFLAGS="$CFLAGS$X_CFLAGS"
CXXFLAGS="$CXXFLAGS$X_CFLAGS"

dnl# My test to see if OpenGL is on this machine:
GLLIB=
if test "$uname" = "WIN32"
then
    GLLIB="-lopengl32 -lglu32"
    AC_DEFINE(HAVE_GL)
else
    AC_CHECK_LIB(GL, glXMakeCurrent, AC_DEFINE(HAVE_GL) GLLIB=" -lGLU -lGL", \
	AC_CHECK_LIB(MesaGL,glXMakeCurrent, AC_DEFINE(HAVE_GL) GLLIB=" -lMesaGLU -lMesaGL",,\
	    -lX11 -lXext $X_EXTRA_LIBS -lm), \
	-lX11 -lXext $X_EXTRA_LIBS -lm)
fi

AC_SUBST(GLLIB)

dnl# Test for libpng (and for libz by the way)
dnl# We check for a 1.0 function so versions of libpng < 1.0 are not
dnl# used...
AC_CHECK_HEADER(png.h, AC_CHECK_LIB(png, png_set_sig_bytes, \
	AC_DEFINE(HAVE_PNG) LIBPNG=" -lpng -lz"\
        ,,$X_EXTRA_LIBS -lz -lm))
AC_SUBST(LIBPNG)


dnl# Test for libjpeg
AC_CHECK_HEADER(jpeglib.h, AC_CHECK_LIB(jpeg, jpeg_stdio_src, \
	AC_DEFINE(HAVE_JPEG) LIBJPEG=" -ljpeg"\ 
        ,,))
AC_SUBST(LIBJPEG)
 
AC_CHECK_HEADER(X11/extensions/Xdbe.h, \
    if test "$uname" != "SunOS"; then
        AC_DEFINE(HAVE_XDBE)
    fi)

ac_cv_have_overlay=no
if test "$uname" != "WIN32"; then
    AC_CACHE_CHECK("for X overlay visuals", ac_cv_have_overlay,
	if xprop -root 2>/dev/null | grep -c "SERVER_OVERLAY_VISUALS" >/dev/null; then
	    ac_cv_have_overlay=yes
	fi)
fi

if test "$ac_cv_have_overlay" = yes; then
    AC_DEFINE(HAVE_OVERLAY)
fi

AC_ARG_ENABLE(threads, [  --disable-threads       dont require mt libraries],,enable_threads=yes)

have_pthread=no
if test "$enable_threads" = yes; then
  AC_CHECK_LIB(c, pthread_create, \
     have_pthread=yes,
     AC_CHECK_LIB(pthread, pthread_create, \
        THREADSLIBS=-lpthread have_pthread=yes,,),
  )
fi

if test "$have_pthread" = yes; then
    LDLIBS="$LDLIBS"
    GLDLIBS="$GLDLIBS"
    AC_DEFINE(HAVE_PTHREAD)
fi
AC_SUBST(THREADSLIBS)

AC_ARG_ENABLE(plugins, [  --disable-plugins       dont require so/dll calls],,enable_plugins=yes)

have_dlopen=no
if test "$enable_plugins" = yes; then
  AC_CHECK_LIB(c, dlopen, \
     LD_DLOPEN_FLAGS=""
     have_dlopen=yes,
     AC_CHECK_LIB(dl, dlopen, \
      LDLIBS="$LDLIBS -ldl" GLDLIBS="$GLDLIBS -ldl" have_dlopen=yes,,),
  )
fi

if test "$have_dlopen" = yes; then
    AC_DEFINE(HAVE_DLOPEN)
fi

AC_SUBST(LD_DLOPEN_FLAGS)

MAKEDEPEND="\${CXX} -M"

dnl# add warnings to compiler switches:
dnl# do this last so messing with switches does not break tests
if test -n "$GXX"; then
    CFLAGS="-Wall $CFLAGS"
    CXXFLAGS="-Wall $CXXFLAGS"
    if test -z "$DEBUGFLAG"; then
    	# Note: Can't use -fomit-frame-pointer - prevents tools like
	#       libsafe from working!
	# WAS: I removed the -fforce-mem, -fforce-addr, -fcaller-saves
	#      They all seemed to make either no difference or enlarged
	#      the code by a few hundred bytes.
        DEBUGFLAG="-O2"
    fi

    # See if GCC supports -fno-exceptions...
    # WAS: this DOES make a big difference in the code size!
    echo "Testing if GCC supports -fno-exceptions..."
    OLDCFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS -fno-exceptions"
    AC_TRY_COMPILE(,,
	CXXFLAGS="$CXXFLAGS -fno-exceptions"
	echo "Congratulations - your GCC supports exceptions; disabling them for FLTK...",
	CFLAGS="$OLDCFLAGS"
	echo "GCC does not support exceptions...")

    # See if we are running Solaris; if so, try the -fpermissive option...
    if test $uname = SunOS; then
	echo "Testing if GCC supports -fpermissive..."

	OLDCFLAGS="$CFLAGS"
	CFLAGS="$CFLAGS -fpermissive"
	AC_TRY_COMPILE(,,
	    CXXFLAGS="$CXXFLAGS -fpermissive"
	    echo "Enabling -fpermissive to work around X header bugs...",
	    CFLAGS="$OLDCFLAGS"
	    echo "The -fpermissive option is not required by your GCC...")
    fi
else
    case `(uname) 2>/dev/null` in
        IRIX*)
	    # Running some flavor of IRIX; see which version and
	    # set things up according...
	    if test "$uversion" -ge 62; then
	        # We are running IRIX 6.2 or higher; uncomment the following
		# lines if you don't have IDO 7.2 or higher:
		#
		#     CXX="CC -n32"
		#     CC="cc -n32"
		#     LD="ld -n32"
		#     MAKEDEPEND="CC -M"

        	CFLAGS="-fullwarn $CFLAGS"
        	CXXFLAGS="-fullwarn $CXXFLAGS"
		if test -z "$DEBUGFLAG"; then
	            DEBUGFLAG="-O2 -OPT:Olimit=3000"
		fi
	    else
        	CXXFLAGS="+w +pp $CXXFLAGS"
		if test -z "$DEBUGFLAG"; then
	            DEBUGFLAG="-O2 -Olimit=3000"
		fi
	    fi
	    ;;
	HP-UX*)
	    # Running HP-UX; these options should work for the HP compilers.
	    if test -z "$DEBUGFLAG"; then
		DEBUGFLAG="+O2"
	    fi
	    ;;
	SunOS*)
	    # Solaris
	    if test -z "$DEBUGFLAG"; then
		DEBUGFLAG="-O"
	    fi
	    ;;
	*)
	    # Running some other operating system; inform the user they
	    # should contribute the necessary options to fltk-bugs@easysw.com...
	    echo "Building FLTK with default compiler optimizations; contact"
	    echo "fltk-bugs@easysw.com with uname and compiler options needed"
	    echo "for your platform, or set the CFLAGS and CXXFLAGS options"
	    echo "before running configure."
	    if test -z "$DEBUGFLAG"; then
		DEBUGFLAG="-O"
	    fi
	    ;;
    esac
fi

PREFIX=${prefix}
AC_SUBST(DEBUGFLAG)

if test "$PREFIX" = "NONE"; then
    AC_DEFINE_UNQUOTED(CONFIGDIR, "${ac_default_prefix}/lib/fltk")
else
    AC_DEFINE_UNQUOTED(CONFIGDIR, "${prefix}/lib/fltk")
fi

AC_SUBST(DSOEXT)
AC_SUBST(DSOSHORTEXT)
AC_SUBST(DSOCOMMAND)
AC_SUBST(THEMECOMMAND)
AC_SUBST(DSOCFLAGS)
AC_SUBST(LIBNAME)
AC_SUBST(LIBEXT)
AC_SUBST(DSOLIBNAME)
AC_SUBST(DSOLIBimagesNAME)
AC_SUBST(DSOLIBformsNAME)
AC_SUBST(DSOLIBglNAME)
AC_SUBST(DSOLIBglutNAME)
AC_SUBST(LIBCOMMAND)
AC_SUBST(MAKEDEPEND)
AC_SUBST(SYSTYPE)
AC_CONFIG_HEADER(config.h:configh.in)
AC_OUTPUT(makeinclude fltk-config Makefile)

chmod +x fltk-config

dnl#
dnl# End of "$Id: configure.in,v 1.90 2001/07/10 08:14:38 clip Exp $".
dnl#
