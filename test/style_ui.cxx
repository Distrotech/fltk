// generated by Fast Light User Interface Designer (fluid) version 2.00

#include "style_ui.h"

static void cb_Open(Fl_Menu_*, void*) {
  const char* f = fl_file_chooser("File to open",0,0);
if (f) browser->load(f);
}

static void cb_Quit(Fl_Menu_*, void*) {
  if (fl_ask("Are you sure you want to quit?")) exit(0);
}

static void cb_Windoze(Fl_Menu_*, void*) {
  windoze();
}

static void cb_Motif(Fl_Menu_*, void*) {
  motif();
}

static void cb_Fltk(Fl_Menu_*, void*) {
  fltk_classic();
}

Fl_Menu_Item menu_[] = {
 {"&File", 0,  0, 0, 64},
 {"New", 0,  0, 0, 0},
 {"&Open", 0x8006f,  (Fl_Callback*)cb_Open, 0, 0},
 {"&Save", 0,  0, 0, 0},
 {"Save as...", 0,  0, 0, 0},
 {"Duplicate", 0,  0, 0, 0},
 {"&Quit", 0x80071,  (Fl_Callback*)cb_Quit, 0, 0},
 {0},
 {"&Edit", 0,  0, 0, 64},
 {"Cut", 0,  0, 0, 0},
 {"Copy", 0,  0, 0, 0},
 {"Paste", 0,  0, 0, 0},
 {"Undo", 0,  0, 0, 128},
 {"Move", 0,  0, 0, 0},
 {"Constrain", 0,  0, 0, 0},
 {"Arbitrate", 0,  0, 0, 0},
 {0},
 {"Options", 0,  0, 0, 64},
 {"Red", 0,  0, 0, 2},
 {"Blue", 0,  0, 0, 2},
 {"Green", 0,  0, 0, 2},
 {"Yellow", 0,  0, 0, 2},
 {"Fast", 0,  0, 0, 8},
 {"Good", 0,  0, 0, 8},
 {"Cheap", 0,  0, 0, 8},
 {0},
 {"Themes", 0,  0, 0, 64},
 {"Windoze", 0,  (Fl_Callback*)cb_Windoze, 0, 12},
 {"Motif", 0,  (Fl_Callback*)cb_Motif, 0, 8},
 {"Fltk classic", 0,  (Fl_Callback*)cb_Fltk, 0, 8},
 {0},
 {0}
};

Fl_Check_Button *check1=(Fl_Check_Button *)0;

Fl_Browser *browser=(Fl_Browser *)0;

static void cb_OK(Fl_Return_Button*, void*) {
  exit(0);
}

Fl_Button *cancel_button=(Fl_Button *)0;

static void cb_Load(Fl_Button*, void*) {
  fl_read_style_plugins();
Fl::redraw();
}

Fl_Window* make_window() {
  Fl_Window* w;
  { Fl_Window* o = new Fl_Window(530, 405);
    w = o;
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 535, 30);
      o->menu(menu_);
    }
    { Fl_Input* o = new Fl_Input(50, 40, 300, 25, "input:");
      o->value("This is a text input field");
    }
    { Fl_Output* o = new Fl_Output(50, 65, 300, 25, "output:");
      o->value("This is an output text field");
    }
    check1 = new Fl_Check_Button(390, 35, 85, 25, "check1");
    new Fl_Check_Button(390, 60, 85, 25, "check1");
    new Fl_Check_Button(390, 85, 85, 25, "check1");
    new Fl_Check_Button(390, 110, 85, 25, "check1");
    { Fl_Check_Button* o = new Fl_Check_Button(390, 145, 85, 25, "radio1");
      o->type(102);
    }
    { Fl_Check_Button* o = new Fl_Check_Button(390, 170, 85, 25, "radio1");
      o->type(102);
    }
    { Fl_Check_Button* o = new Fl_Check_Button(390, 195, 85, 25, "radio1");
      o->type(102);
    }
    { Fl_Check_Button* o = new Fl_Check_Button(390, 220, 85, 25, "radio1");
      o->type(102);
    }
    { Fl_Browser* o = browser = new Fl_Browser(50, 95, 300, 285);
      o->type(3);
      o->load("Makefile");
    }
    new Fl_Slider(360, 35, 25, 345, "slider");
    { Fl_Return_Button* o = new Fl_Return_Button(400, 310, 120, 30, "OK");
      o->callback((Fl_Callback*)cb_OK);
    }
    cancel_button = new Fl_Button(400, 350, 120, 30, "cancel");
    { Fl_Button* o = new Fl_Button(400, 250, 120, 25, "Load style plugins");
      o->callback((Fl_Callback*)cb_Load);
    }
    o->end();
  }
  return w;
}
