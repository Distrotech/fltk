// generated by Fast Light User Interface Designer (fluid) version 1.0107

// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef test_h
#define test_h
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>

class Composite : public Fl_Group {
public:
  Composite(int X, int Y, int W, int H, const char *L = 0);
};
#include <FL/Fl_Double_Window.H>
#endif

Composite::Composite(int X, int Y, int W, int H, const char *L)
  : Fl_Group(X, Y, W, H, L) {
  Composite *o = this;
  o->position(0, 0);
o->box(FL_FLAT_BOX);
o->color(FL_BACKGROUND_COLOR);
o->selection_color(FL_BACKGROUND_COLOR);
o->labeltype(FL_NO_LABEL);
o->labelfont(0);
o->labelsize(14);
o->labelcolor(FL_BLACK);
o->align(FL_ALIGN_TOP);
o->when(FL_WHEN_RELEASE);
new Fl_Button(25, 25, 50, 50, "@circle");
o->position(X, Y);
end();
}

int main(int argc, char **argv) {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(200, 200, "Widget class test");
    w = o;
    { Composite* o = new Composite(0, 0, 100, 100, "top left");
      o->box(FL_EMBOSSED_FRAME);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
      o->end();
    }
    { Composite* o = new Composite(100, 0, 100, 100, "top right");
      o->box(FL_EMBOSSED_FRAME);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_TOP_RIGHT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
      o->end();
    }
    { Composite* o = new Composite(0, 100, 100, 100, "bottom left");
      o->box(FL_EMBOSSED_FRAME);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_BOTTOM_LEFT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
      o->end();
    }
    { Composite* o = new Composite(100, 100, 100, 100, "bottom right");
      o->box(FL_EMBOSSED_FRAME);
      o->color(FL_BACKGROUND_COLOR);
      o->selection_color(FL_BACKGROUND_COLOR);
      o->labeltype(FL_NORMAL_LABEL);
      o->labelfont(0);
      o->labelsize(14);
      o->labelcolor(FL_BLACK);
      o->align(FL_ALIGN_BOTTOM_RIGHT|FL_ALIGN_INSIDE);
      o->when(FL_WHEN_RELEASE);
      o->end();
    }
    o->end();
  }
  w->show(argc, argv);
  return Fl::run();
}
