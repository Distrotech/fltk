// generated by Fast Light User Interface Designer (fluid) version 3.0000

#include "CubeViewUI.h"

void CubeViewUI::cb_vrot_i(fltk3::Roller* o, void*) {
  cube->v_angle(((Fl_Roller *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_vrot(fltk3::Roller* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_vrot_i(o,v);
}

void CubeViewUI::cb_ypan_i(fltk3::Slider* o, void*) {
  cube->pany(((Fl_Slider *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_ypan(fltk3::Slider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_ypan_i(o,v);
}

void CubeViewUI::cb_xpan_i(fltk3::Slider* o, void*) {
  cube->panx(((Fl_Slider *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_xpan(fltk3::Slider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_xpan_i(o,v);
}

void CubeViewUI::cb_hrot_i(fltk3::Roller* o, void*) {
  cube->h_angle(((Fl_Roller *)o)->value());
cube->redraw();
}
void CubeViewUI::cb_hrot(fltk3::Roller* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->parent()->user_data()))->cb_hrot_i(o,v);
}

void CubeViewUI::cb_zoom_i(fltk3::ValueSlider* o, void*) {
  cube->size=((Fl_Value_Slider *)o)->value();
cube->redraw();
}
void CubeViewUI::cb_zoom(fltk3::ValueSlider* o, void* v) {
  ((CubeViewUI*)(o->parent()->parent()->user_data()))->cb_zoom_i(o,v);
}

CubeViewUI::CubeViewUI() {
  { mainWindow = new fltk3::DoubleWindow(415, 405, "CubeView");
    mainWindow->box(fltk3::UP_BOX);
    mainWindow->labelsize(12);
    mainWindow->user_data((void*)(this));
    { fltk3::Group* o = new fltk3::Group(5, 3, 374, 399);
      { VChange = new fltk3::Group(5, 100, 37, 192);
        { vrot = new fltk3::Roller(5, 100, 17, 186, "V Rot");
          vrot->labeltype(fltk3::NO_LABEL);
          vrot->labelsize(12);
          vrot->minimum(-180);
          vrot->maximum(180);
          vrot->step(1);
          vrot->callback((fltk3::Callback*)cb_vrot);
          vrot->align(fltk3::Align(fltk3::ALIGN_WRAP));
        } // fltk3::Roller* vrot
        { ypan = new fltk3::Slider(25, 100, 17, 186, "V Pan");
          ypan->type(4);
          ypan->selection_color(fltk3::DARK_BLUE);
          ypan->labeltype(fltk3::NO_LABEL);
          ypan->labelsize(12);
          ypan->minimum(-25);
          ypan->maximum(25);
          ypan->step(0.1);
          ypan->callback((fltk3::Callback*)cb_ypan);
          ypan->align(fltk3::Align(fltk3::ALIGN_CENTER));
        } // fltk3::Slider* ypan
        VChange->end();
      } // fltk3::Group* VChange
      { HChange = new fltk3::Group(120, 362, 190, 40);
        { xpan = new fltk3::Slider(122, 364, 186, 17, "H Pan");
          xpan->type(5);
          xpan->selection_color(fltk3::DARK_BLUE);
          xpan->labeltype(fltk3::NO_LABEL);
          xpan->labelsize(12);
          xpan->minimum(25);
          xpan->maximum(-25);
          xpan->step(0.1);
          xpan->callback((fltk3::Callback*)cb_xpan);
          xpan->align(fltk3::Align(fltk3::ALIGN_CENTER|fltk3::ALIGN_INSIDE));
        } // fltk3::Slider* xpan
        { hrot = new fltk3::Roller(122, 383, 186, 17, "H Rotation");
          hrot->type(1);
          hrot->labeltype(fltk3::NO_LABEL);
          hrot->labelsize(12);
          hrot->minimum(-180);
          hrot->maximum(180);
          hrot->step(1);
          hrot->callback((fltk3::Callback*)cb_hrot);
          hrot->align(fltk3::Align(fltk3::ALIGN_RIGHT));
        } // fltk3::Roller* hrot
        HChange->end();
      } // fltk3::Group* HChange
      { MainView = new fltk3::Group(46, 27, 333, 333);
        { cframe = new fltk3::Box(46, 27, 333, 333);
          cframe->box(fltk3::DOWN_FRAME);
          cframe->color((fltk3::Color)4);
          cframe->selection_color((fltk3::Color)69);
        } // fltk3::Box* cframe
        { cube = new CubeView(48, 29, 329, 329, "This is the cube_view");
          cube->box(fltk3::NO_BOX);
          cube->color(fltk3::BACKGROUND_COLOR);
          cube->selection_color(fltk3::BACKGROUND_COLOR);
          cube->labeltype(fltk3::NORMAL_LABEL);
          cube->labelfont(0);
          cube->labelsize(14);
          cube->labelcolor(fltk3::FOREGROUND_COLOR);
          cube->align(fltk3::Align(fltk3::ALIGN_CENTER|fltk3::ALIGN_INSIDE));
          cube->when(fltk3::WHEN_RELEASE);
          fltk3::Group::current()->resizable(cube);
        } // CubeView* cube
        MainView->end();
        fltk3::Group::current()->resizable(MainView);
      } // fltk3::Group* MainView
      { zoom = new fltk3::ValueSlider(106, 3, 227, 19, "Zoom");
        zoom->type(5);
        zoom->selection_color(fltk3::DARK_BLUE);
        zoom->labelfont(1);
        zoom->labelsize(12);
        zoom->minimum(1);
        zoom->maximum(50);
        zoom->step(0.1);
        zoom->value(10);
        zoom->textfont(1);
        zoom->callback((fltk3::Callback*)cb_zoom);
        zoom->align(fltk3::Align(fltk3::ALIGN_LEFT));
      } // fltk3::ValueSlider* zoom
      o->end();
    } // fltk3::Group* o
    mainWindow->end();
    mainWindow->resizable(mainWindow);
  } // fltk3::DoubleWindow* mainWindow
}

void CubeViewUI::show(int argc, char **argv) {
  mainWindow->show(argc, argv);
}
