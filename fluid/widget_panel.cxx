//
// "$Id$"
//
// Widget panel for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2005 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "widget_panel.h"

static void cb_(Fl_Tabs* o, void* v) {
  propagate_load((Fl_Group *)o,v);
}

Fl_Value_Input *widget_x_input=(Fl_Value_Input *)0;

Fl_Value_Input *widget_y_input=(Fl_Value_Input *)0;

Fl_Value_Input *widget_w_input=(Fl_Value_Input *)0;

Fl_Value_Input *widget_h_input=(Fl_Value_Input *)0;

Fl_Input *v_input[4]={(Fl_Input *)0};

Fl_Double_Window* make_widget_panel() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(405, 345);
    w = o;
    o->labelsize(11);
    w->hotspot(o);
    { Fl_Tabs* o = new Fl_Tabs(3, 5, 397, 310);
      o->selection_color(FL_INACTIVE_COLOR);
      o->labelsize(11);
      o->callback((Fl_Callback*)cb_);
      o->when(FL_WHEN_NEVER);
      { Fl_Group* o = new Fl_Group(3, 25, 396, 285, "GUI");
        o->labelsize(11);
        o->callback((Fl_Callback*)propagate_load);
        o->when(FL_WHEN_NEVER);
        { Fl_Group* o = new Fl_Group(3, 25, 396, 285);
          o->labelsize(11);
          o->callback((Fl_Callback*)propagate_load);
          { Fl_Group* o = new Fl_Group(85, 25, 309, 30);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(85, 30, 199, 20, "Label:");
              o->tooltip("The label text for the widget.");
              o->labelfont(1);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)label_cb);
              o->when(FL_WHEN_CHANGED);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Choice* o = new Fl_Choice(285, 30, 109, 20);
              o->tooltip("The label style for the widget.");
              o->box(FL_THIN_UP_BOX);
              o->down_box(FL_BORDER_BOX);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)labeltype_cb);
              o->menu(labeltypemenu);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(85, 55, 310, 25);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(85, 55, 241, 20, "Image:");
              o->tooltip("The active image for the widget.");
              o->labelfont(1);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)image_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Button* o = new Fl_Button(325, 55, 70, 20, "Browse...");
              o->tooltip("Click to choose the active image.");
              o->labelsize(11);
              o->callback((Fl_Callback*)image_browse_cb);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(84, 80, 310, 25);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(85, 80, 240, 20, "Inactive:");
              o->tooltip("The inactive image for the widget.");
              o->labelfont(1);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)inactive_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Button* o = new Fl_Button(324, 80, 70, 20, "Browse...");
              o->tooltip("Click to choose the inactive image.");
              o->labelsize(11);
              o->callback((Fl_Callback*)inactive_browse_cb);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(85, 106, 309, 20, "Alignment:");
            o->labelfont(1);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            o->align(FL_ALIGN_LEFT);
            { Fl_Button* o = new Fl_Button(85, 106, 40, 20, "Clip");
              o->tooltip("Clip the label to the inside of the widget.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_CLIP));
              o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
            }
            { Fl_Button* o = new Fl_Button(130, 106, 45, 20, "Wrap");
              o->tooltip("Wrap the label text.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_WRAP));
            }
            { Fl_Button* o = new Fl_Button(180, 106, 69, 20, "Text/Image");
              o->tooltip("Show the label text over the image.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_TEXT_OVER_IMAGE));
            }
            { Fl_Button* o = new Fl_Button(254, 106, 20, 20, "@-1<-");
              o->tooltip("Left-align the label.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->labelcolor(FL_INACTIVE_COLOR);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_LEFT));
            }
            { Fl_Button* o = new Fl_Button(279, 106, 20, 20, "@-1->");
              o->tooltip("Right-align the label.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->labelcolor(FL_INACTIVE_COLOR);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_RIGHT));
            }
            { Fl_Button* o = new Fl_Button(304, 106, 20, 20, "@-18");
              o->tooltip("Top-align the label.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->labelcolor(FL_INACTIVE_COLOR);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_TOP));
            }
            { Fl_Button* o = new Fl_Button(329, 106, 20, 20, "@-12");
              o->tooltip("Bottom-align the label.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->labelcolor(FL_INACTIVE_COLOR);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_BOTTOM));
            }
            { Fl_Button* o = new Fl_Button(354, 106, 20, 20, "@-3square");
              o->tooltip("Show the label inside the widget.");
              o->type(1);
              o->selection_color(FL_INACTIVE_COLOR);
              o->labelsize(11);
              o->labelcolor(FL_INACTIVE_COLOR);
              o->callback((Fl_Callback*)align_cb, (void*)(FL_ALIGN_INSIDE));
            }
            { Fl_Box* o = new Fl_Box(379, 106, 15, 20);
              o->labelsize(11);
              Fl_Group::current()->resizable(o);
            }
            o->end();
          }
          { Fl_Value_Input* o = widget_x_input = new Fl_Value_Input(85, 145, 60, 20, "X:");
            o->tooltip("The X position of the widget.");
            o->labelsize(11);
            o->maximum(2048);
            o->step(1);
            o->textsize(11);
            o->callback((Fl_Callback*)x_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Box* o = new Fl_Box(24, 145, 61, 20, "Position:");
            o->labelfont(1);
            o->labelsize(11);
            o->align(FL_ALIGN_RIGHT|FL_ALIGN_INSIDE);
          }
          { Fl_Value_Input* o = widget_y_input = new Fl_Value_Input(149, 145, 60, 20, "Y:");
            o->tooltip("The Y position of the widget.");
            o->labelsize(11);
            o->maximum(2048);
            o->step(1);
            o->textsize(11);
            o->callback((Fl_Callback*)y_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = widget_w_input = new Fl_Value_Input(214, 145, 60, 20, "Width:");
            o->tooltip("The width of the widget.");
            o->labelsize(11);
            o->maximum(2048);
            o->step(1);
            o->textsize(11);
            o->callback((Fl_Callback*)w_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = widget_h_input = new Fl_Value_Input(279, 145, 60, 20, "Height:");
            o->tooltip("The height of the widget.");
            o->labelsize(11);
            o->maximum(2048);
            o->step(1);
            o->textsize(11);
            o->callback((Fl_Callback*)h_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Box* o = new Fl_Box(29, 185, 55, 20, "Values:");
            o->labelfont(1);
            o->labelsize(11);
            o->align(FL_ALIGN_RIGHT|FL_ALIGN_INSIDE);
          }
          { Fl_Value_Input* o = new Fl_Value_Input(84, 185, 55, 20, "Size:");
            o->tooltip("The size of the slider.");
            o->labelsize(11);
            o->step(0.010101);
            o->textsize(11);
            o->callback((Fl_Callback*)slider_size_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = new Fl_Value_Input(144, 185, 55, 20, "Minimum:");
            o->tooltip("The minimum value of the widget.");
            o->labelsize(11);
            o->textsize(11);
            o->callback((Fl_Callback*)min_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = new Fl_Value_Input(204, 185, 55, 20, "Maximum:");
            o->tooltip("The maximum value of the widget.");
            o->labelsize(11);
            o->value(1);
            o->textsize(11);
            o->callback((Fl_Callback*)max_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = new Fl_Value_Input(264, 185, 55, 20, "Step:");
            o->tooltip("The resolution of the widget value.");
            o->labelsize(11);
            o->textsize(11);
            o->callback((Fl_Callback*)step_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Fl_Value_Input* o = new Fl_Value_Input(324, 185, 55, 20, "Value:");
            o->tooltip("The current widget value.");
            o->labelsize(11);
            o->textsize(11);
            o->callback((Fl_Callback*)value_cb);
            o->align(FL_ALIGN_TOP_LEFT);
          }
          { Shortcut_Button* o = new Shortcut_Button(84, 210, 308, 20, "Shortcut:");
            o->tooltip("The shortcut key for the widget.");
            o->box(FL_DOWN_BOX);
            o->color(FL_BACKGROUND2_COLOR);
            o->selection_color(FL_BACKGROUND2_COLOR);
            o->labeltype(FL_NORMAL_LABEL);
            o->labelfont(1);
            o->labelsize(11);
            o->labelcolor(FL_BLACK);
            o->callback((Fl_Callback*)shortcut_in_cb);
            o->align(FL_ALIGN_LEFT);
            o->when(FL_WHEN_RELEASE);
          }
          { Fl_Group* o = new Fl_Group(87, 235, 305, 21);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(87, 236, 101, 20, "X Class:");
              o->tooltip("The X resource class.");
              o->labelfont(1);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)xclass_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(193, 236, 59, 20, "Border");
              o->tooltip("Add a border around the window.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)border_cb);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(257, 236, 55, 20, "Modal");
              o->tooltip("Make the window modal.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)modal_cb);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(317, 235, 75, 21, "Nonmodal");
              o->tooltip("Make the window non-modal.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)non_modal_cb);
              o->align(132|FL_ALIGN_INSIDE);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(87, 260, 307, 20);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Light_Button* o = new Fl_Light_Button(87, 260, 57, 20, "Visible");
              o->tooltip("Show the widget.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)visible_cb);
            }
            { Fl_Box* o = new Fl_Box(87, 260, 6, 20, "Attributes:");
              o->labelfont(1);
              o->labelsize(11);
              o->align(FL_ALIGN_LEFT);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(149, 260, 56, 20, "Active");
              o->tooltip("Activate the widget.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)active_cb);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(210, 260, 74, 20, "Resizable");
              o->tooltip("Make the widget resizable.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)resizable_cb);
              o->when(FL_WHEN_CHANGED);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(289, 260, 64, 20, "Hotspot");
              o->tooltip("Center the window under this widget.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)hotspot_cb);
              o->when(FL_WHEN_CHANGED);
            }
            { Fl_Box* o = new Fl_Box(374, 260, 20, 20);
              o->labelsize(11);
              Fl_Group::current()->resizable(o);
            }
            o->end();
          }
          { Fl_Input* o = new Fl_Input(87, 285, 307, 20, "Tooltip:");
            o->tooltip("The tooltip text for the widget.");
            o->labelfont(1);
            o->labelsize(11);
            o->textsize(11);
            o->callback((Fl_Callback*)tooltip_cb);
          }
          { Fl_Box* o = new Fl_Box(89, 305, 305, 5);
            o->labelsize(11);
            Fl_Group::current()->resizable(o);
          }
          o->end();
          Fl_Group::current()->resizable(o);
        }
        o->end();
        Fl_Group::current()->resizable(o);
      }
      { Fl_Group* o = new Fl_Group(3, 25, 397, 290, "Style");
        o->labelsize(11);
        o->callback((Fl_Callback*)propagate_load);
        o->when(FL_WHEN_NEVER);
        o->hide();
        { Fl_Group* o = new Fl_Group(3, 25, 396, 178);
          o->labelsize(11);
          o->callback((Fl_Callback*)propagate_load);
          { Fl_Group* o = new Fl_Group(95, 30, 300, 100);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Group* o = new Fl_Group(95, 30, 300, 25);
              o->labelsize(11);
              o->callback((Fl_Callback*)propagate_load);
              { Fl_Choice* o = new Fl_Choice(95, 30, 162, 20, "Label Font:");
                o->tooltip("The style of the label text.");
                o->box(FL_THIN_UP_BOX);
                o->down_box(FL_BORDER_BOX);
                o->labelfont(1);
                o->labelsize(11);
                o->callback((Fl_Callback*)labelfont_cb);
                Fl_Group::current()->resizable(o);
                o->menu(fontmenu);
              }
              { Fl_Value_Input* o = new Fl_Value_Input(255, 30, 50, 20);
                o->tooltip("The size of the label text.");
                o->labelsize(11);
                o->maximum(100);
                o->step(1);
                o->value(14);
                o->textsize(11);
                o->callback((Fl_Callback*)labelsize_cb);
              }
              { Fl_Button* o = new Fl_Button(305, 30, 90, 20, "Label Color");
                o->tooltip("The color of the label text.");
                o->labelsize(11);
                o->callback((Fl_Callback*)labelcolor_cb);
              }
              o->end();
            }
            { Fl_Group* o = new Fl_Group(95, 55, 300, 25);
              o->labelsize(11);
              o->callback((Fl_Callback*)propagate_load);
              { Fl_Choice* o = new Fl_Choice(95, 55, 210, 20, "Box:");
                o->tooltip("The \"up\" box of the widget.");
                o->box(FL_THIN_UP_BOX);
                o->down_box(FL_BORDER_BOX);
                o->labelfont(1);
                o->labelsize(11);
                o->callback((Fl_Callback*)box_cb);
                Fl_Group::current()->resizable(o);
                o->menu(boxmenu);
              }
              { Fl_Button* o = new Fl_Button(305, 55, 90, 20, "Color");
                o->tooltip("The background color of the widget.");
                o->labelsize(11);
                o->callback((Fl_Callback*)color_cb);
              }
              o->end();
            }
            { Fl_Group* o = new Fl_Group(95, 80, 300, 25);
              o->labelsize(11);
              o->callback((Fl_Callback*)propagate_load);
              { Fl_Choice* o = new Fl_Choice(95, 80, 210, 20, "Down Box:");
                o->tooltip("The \"down\" box of the widget.");
                o->box(FL_THIN_UP_BOX);
                o->down_box(FL_BORDER_BOX);
                o->labelfont(1);
                o->labelsize(11);
                o->callback((Fl_Callback*)down_box_cb);
                Fl_Group::current()->resizable(o);
                o->menu(boxmenu);
              }
              { Fl_Button* o = new Fl_Button(305, 80, 90, 20, "Select Color");
                o->tooltip("The selection color of the widget.");
                o->labelsize(11);
                o->callback((Fl_Callback*)color2_cb);
              }
              o->end();
            }
            { Fl_Group* o = new Fl_Group(95, 105, 300, 25);
              o->labelsize(11);
              o->callback((Fl_Callback*)propagate_load);
              { Fl_Choice* o = new Fl_Choice(95, 105, 160, 20, "Text Font:");
                o->tooltip("The value text style.");
                o->box(FL_DOWN_BOX);
                o->down_box(FL_BORDER_BOX);
                o->labelfont(1);
                o->labelsize(11);
                o->callback((Fl_Callback*)textfont_cb);
                Fl_Group::current()->resizable(o);
                o->menu(fontmenu);
              }
              { Fl_Value_Input* o = new Fl_Value_Input(255, 105, 50, 20);
                o->tooltip("The value text size.");
                o->labelsize(11);
                o->maximum(100);
                o->step(1);
                o->value(14);
                o->textsize(11);
                o->callback((Fl_Callback*)textsize_cb);
              }
              { Fl_Button* o = new Fl_Button(305, 105, 90, 20, "Text Color");
                o->tooltip("The value text color.");
                o->labelsize(11);
                o->callback((Fl_Callback*)textcolor_cb);
              }
              o->end();
            }
            o->end();
          }
          { Fl_Box* o = new Fl_Box(95, 135, 295, 68);
            o->labelsize(11);
            Fl_Group::current()->resizable(o);
          }
          o->end();
          Fl_Group::current()->resizable(o);
        }
        o->end();
      }
      { Fl_Group* o = new Fl_Group(5, 25, 395, 290, "C++");
        o->labelsize(11);
        o->callback((Fl_Callback*)propagate_load);
        o->when(FL_WHEN_NEVER);
        o->hide();
        { Fl_Group* o = new Fl_Group(95, 30, 300, 137);
          o->labelsize(11);
          o->callback((Fl_Callback*)propagate_load);
          { Fl_Group* o = new Fl_Group(95, 30, 300, 25);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(100, 30, 160, 20, "Class:");
              o->tooltip("The widget subclass.");
              o->labelfont(1);
              o->labelsize(11);
              o->textfont(4);
              o->textsize(11);
              o->callback((Fl_Callback*)subclass_cb, (void*)(4));
              Fl_Group::current()->resizable(o);
            }
            { Fl_Choice* o = new Fl_Choice(260, 30, 135, 20);
              o->tooltip("The widget subtype.");
              o->box(FL_THIN_UP_BOX);
              o->down_box(FL_BORDER_BOX);
              o->labelsize(11);
              o->callback((Fl_Callback*)subtype_cb);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(95, 55, 300, 25);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(100, 55, 241, 20, "Name:");
              o->tooltip("The name of the widget.");
              o->labelfont(1);
              o->labelsize(11);
              o->textsize(11);
              o->callback((Fl_Callback*)name_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(341, 55, 54, 20, "public");
              o->tooltip("Make the widget publicly accessible.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)name_public_cb);
              o->when(FL_WHEN_CHANGED);
            }
            o->end();
          }
          { Fl_Input* o = v_input[0] = new Fl_Input(100, 80, 295, 20, "Extra Code:");
            o->tooltip("Extra initialization code for the widget.");
            o->labelfont(1);
            o->labelsize(11);
            o->textfont(4);
            o->textsize(11);
            o->callback((Fl_Callback*)v_input_cb, (void*)(0));
          }
          { Fl_Input* o = v_input[1] = new Fl_Input(100, 100, 295, 20);
            o->tooltip("Extra initialization code for the widget.");
            o->labelsize(11);
            o->textfont(4);
            o->textsize(11);
            o->callback((Fl_Callback*)v_input_cb, (void*)(1));
          }
          { Fl_Input* o = v_input[2] = new Fl_Input(100, 120, 295, 20);
            o->tooltip("Extra initialization code for the widget.");
            o->labelsize(11);
            o->textfont(4);
            o->textsize(11);
            o->callback((Fl_Callback*)v_input_cb, (void*)(2));
          }
          { Fl_Input* o = v_input[3] = new Fl_Input(100, 142, 295, 20);
            o->tooltip("Extra initialization code for the widget.");
            o->labelsize(11);
            o->textfont(4);
            o->textsize(11);
            o->callback((Fl_Callback*)v_input_cb, (void*)(3));
          }
          o->end();
        }
        { Fl_Text_Editor* o = new Fl_Text_Editor(100, 169, 295, 91, "Callback:");
          o->tooltip("The callback function or code for the widget.");
          o->box(FL_DOWN_BOX);
          o->labelfont(1);
          o->labelsize(11);
          o->textfont(4);
          o->textsize(11);
          o->callback((Fl_Callback*)callback_cb);
          o->align(FL_ALIGN_LEFT);
          o->buffer(new Fl_Text_Buffer());
          o->textfont(FL_COURIER);
        }
        { Fl_Group* o = new Fl_Group(95, 265, 303, 45);
          o->labelsize(11);
          o->callback((Fl_Callback*)propagate_load);
          { Fl_Group* o = new Fl_Group(95, 265, 303, 20);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(100, 265, 140, 20, "User Data:");
              o->tooltip("The user data to pass into the callback code.");
              o->labelfont(1);
              o->labelsize(11);
              o->textfont(4);
              o->textsize(11);
              o->callback((Fl_Callback*)user_data_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Choice* o = new Fl_Choice(290, 265, 105, 20, "When:");
              o->tooltip("When to call the callback function.");
              o->box(FL_THIN_UP_BOX);
              o->down_box(FL_BORDER_BOX);
              o->labelfont(1);
              o->labelsize(11);
              o->callback((Fl_Callback*)when_cb);
              o->when(FL_WHEN_CHANGED);
              o->menu(whenmenu);
            }
            o->end();
          }
          { Fl_Group* o = new Fl_Group(95, 290, 300, 20);
            o->labelsize(11);
            o->callback((Fl_Callback*)propagate_load);
            { Fl_Input* o = new Fl_Input(100, 290, 140, 20, "Type:");
              o->tooltip("The type of the user data.");
              o->labelfont(1);
              o->labelsize(11);
              o->textfont(4);
              o->textsize(11);
              o->callback((Fl_Callback*)user_data_type_cb);
              Fl_Group::current()->resizable(o);
            }
            { Fl_Light_Button* o = new Fl_Light_Button(290, 290, 105, 20, "No Change");
              o->tooltip("Call the callback even if the value has not changed.");
              o->selection_color((Fl_Color)1);
              o->labelsize(11);
              o->callback((Fl_Callback*)when_button_cb);
            }
            o->end();
          }
          o->end();
        }
        o->end();
      }
      o->end();
      Fl_Group::current()->resizable(o);
    }
    { Fl_Group* o = new Fl_Group(8, 321, 391, 19);
      o->labelsize(11);
      { Fl_Box* o = new Fl_Box(8, 330, 20, 0);
        o->labelsize(11);
        Fl_Group::current()->resizable(o);
      }
      { Fl_Button* o = new Fl_Button(250, 321, 80, 19, "No &Overlay");
        o->tooltip("Hide the widget overlay box.");
        o->labelsize(11);
        o->labelcolor((Fl_Color)1);
        o->callback((Fl_Callback*)overlay_cb);
      }
      { Fl_Button* o = new Fl_Button(159, 330, 80, 0, "Revert");
        o->labelsize(11);
        o->callback((Fl_Callback*)revert_cb);
        o->hide();
      }
      { Fl_Return_Button* o = new Fl_Return_Button(335, 321, 64, 19, "Close");
        o->labelsize(11);
        o->callback((Fl_Callback*)ok_cb);
      }
      { Fl_Button* o = new Fl_Button(329, 330, 70, 0, "Cancel");
        o->labelsize(11);
        o->callback((Fl_Callback*)cancel_cb);
        o->hide();
      }
      o->end();
    }
    o->end();
  }
  return w;
}

//
// End of "$Id$".
//
