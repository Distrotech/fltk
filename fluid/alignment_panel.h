//
// "$Id$"
//
// Setting and shell dialogs for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2010 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef alignment_panel_h
#define alignment_panel_h
#include <fltk3/run.h>
#include <fltk3/TextBuffer.h>
#include <fltk3/TextDisplay.h>
#include <fltk3/filename.h>
extern void load_history();
extern void redraw_browser();
extern int show_comments;
extern int show_coredevmenus;
extern struct Fl_Menu_Item *dbmanager_item;
extern Fl_Preferences fluid_prefs;
extern Fl_Text_Buffer *shell_run_buffer; 
#include <fltk3/DoubleWindow.h>
#include <fltk3/Preferences.h>
#include <fltk3/Tooltip.h>
extern fltk3::DoubleWindow *project_window;
#include <fltk3/Button.h>
#include <fltk3/TabGroup.h>
#include <fltk3/Group.h>
#include <fltk3/Box.h>
#include <fltk3/Input.h>
extern void header_input_cb(Fl_Input*, void*);
extern Fl_Input *header_file_input;
extern void code_input_cb(Fl_Input*, void*);
extern Fl_Input *code_file_input;
#include <fltk3/CheckButton.h>
extern void include_H_from_C_button_cb(fltk3::CheckButton*, void*);
extern fltk3::CheckButton *include_H_from_C_button;
extern void use_FL_COMMAND_button_cb(fltk3::CheckButton*, void*);
extern fltk3::CheckButton *use_FL_COMMAND_button;
#include <fltk3/Choice.h>
extern void i18n_type_cb(Fl_Choice*, void*);
extern Fl_Choice *i18n_type_chooser;
extern void i18n_text_cb(Fl_Input*, void*);
extern Fl_Input *i18n_include_input;
extern Fl_Input *i18n_file_input;
#include <fltk3/IntInput.h>
extern void i18n_int_cb(Fl_Int_Input*, void*);
extern Fl_Int_Input *i18n_set_input;
extern Fl_Input *i18n_function_input;
fltk3::DoubleWindow* make_project_window();
extern Fl_Menu_Item menu_i18n_type_chooser[];
extern void i18n_cb(Fl_Choice *,void *);
extern void scheme_cb(Fl_Choice *, void *); 
extern fltk3::DoubleWindow *settings_window;
extern void scheme_cb(Fl_Choice*, void*);
extern Fl_Choice *scheme_choice;
extern fltk3::CheckButton *tooltips_button;
extern fltk3::CheckButton *completion_button;
extern fltk3::CheckButton *openlast_button;
extern fltk3::CheckButton *prevpos_button;
extern fltk3::CheckButton *show_comments_button;
#include <fltk3/Spinner.h>
extern Fl_Spinner *recent_spinner;
fltk3::DoubleWindow* make_settings_window();
extern Fl_Menu_Item menu_scheme_choice[];
extern fltk3::DoubleWindow *shell_window;
extern Fl_Input *shell_command_input;
extern fltk3::CheckButton *shell_writecode_button;
extern fltk3::CheckButton *shell_writemsgs_button;
extern fltk3::CheckButton *shell_savefl_button;
#include <fltk3/ReturnButton.h>
extern void do_shell_command(fltk3::ReturnButton*, void*);
extern fltk3::DoubleWindow *shell_run_window;
#include <fltk3/TextDisplay.h>
extern Fl_Text_Display *shell_run_display;
extern fltk3::ReturnButton *shell_run_button;
fltk3::DoubleWindow* make_shell_window();
extern fltk3::DoubleWindow *grid_window;
extern void grid_cb(Fl_Int_Input*, long);
extern Fl_Int_Input *horizontal_input;
extern Fl_Int_Input *vertical_input;
extern Fl_Int_Input *snap_input;
extern void guides_cb(fltk3::CheckButton*, long);
extern fltk3::CheckButton *guides_toggle;
#include <fltk3/RoundButton.h>
extern void default_widget_size_cb(fltk3::RoundButton*, long);
extern fltk3::RoundButton *def_widget_size[6];
fltk3::DoubleWindow* make_layout_window();
void show_global_settings_window();
extern fltk3::DoubleWindow *global_settings_window;
extern Fl_Choice *wVisibleFocus;
extern Fl_Choice *wArrowFocus;
extern Fl_Choice *wShowTooltips;
extern Fl_Choice *wDNDText;
extern Fl_Choice *wUserOrSystem;
fltk3::DoubleWindow* make_global_settings_window();
extern Fl_Menu_Item menu_wVisibleFocus[];
extern Fl_Menu_Item menu_wArrowFocus[];
extern Fl_Menu_Item menu_wShowTooltips[];
extern Fl_Menu_Item menu_wDNDText[];
extern Fl_Menu_Item menu_wUserOrSystem[];
#endif

//
// End of "$Id$".
//
