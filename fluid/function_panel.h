//
// "$Id$"
//
// Code dialogs for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2010 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef function_panel_h
#define function_panel_h
#include <fltk3/run.h>
#include <fltk3/DoubleWindow.h>
extern fltk3::DoubleWindow *function_panel;
#include <fltk3/Group.h>
#include <fltk3/Choice.h>
extern fltk3::Choice *f_public_member_choice;
extern fltk3::Choice *f_public_choice;
#include <fltk3/LightButton.h>
extern fltk3::LightButton *f_c_button;
#include <fltk3/Box.h>
#include <fltk3/Input.h>
extern fltk3::Input *f_name_input;
extern fltk3::Input *f_return_type_input;
#include <fltk3/ReturnButton.h>
extern fltk3::ReturnButton *f_panel_ok;
#include <fltk3/Button.h>
extern fltk3::Button *f_panel_cancel;
#include <fltk3/TextEditor.h>
extern fltk3::TextEditor *f_comment_input;
fltk3::DoubleWindow* make_function_panel();
extern fltk3::MenuItem menu_f_public_member_choice[];
extern fltk3::MenuItem menu_f_public_choice[];
extern fltk3::DoubleWindow *code_panel;
#include "CodeEditor.h"
extern CodeEditor *code_input;
extern fltk3::ReturnButton *code_panel_ok;
extern fltk3::Button *code_panel_cancel;
fltk3::DoubleWindow* make_code_panel();
extern fltk3::DoubleWindow *codeblock_panel;
extern fltk3::Input *code_before_input;
extern fltk3::Input *code_after_input;
extern fltk3::ReturnButton *codeblock_panel_ok;
extern fltk3::Button *codeblock_panel_cancel;
fltk3::DoubleWindow* make_codeblock_panel();
extern fltk3::DoubleWindow *declblock_panel;
extern fltk3::Choice *declblock_public_choice;
extern fltk3::LightButton *declblock_public_button_x;
extern fltk3::Input *decl_before_input;
extern fltk3::Input *decl_after_input;
extern fltk3::ReturnButton *declblock_panel_ok;
extern fltk3::Button *declblock_panel_cancel;
fltk3::DoubleWindow* make_declblock_panel();
extern fltk3::MenuItem menu_declblock_public_choice[];
extern fltk3::DoubleWindow *decl_panel;
extern fltk3::Choice *decl_choice;
extern fltk3::Choice *decl_class_choice;
extern fltk3::Input *decl_input;
extern fltk3::ReturnButton *decl_panel_ok;
extern fltk3::Button *decl_panel_cancel;
extern fltk3::TextEditor *decl_comment_input;
fltk3::DoubleWindow* make_decl_panel();
extern fltk3::MenuItem menu_decl_choice[];
extern fltk3::MenuItem menu_decl_class_choice[];
extern fltk3::DoubleWindow *data_panel;
extern fltk3::Choice *data_choice;
extern fltk3::Choice *data_class_choice;
extern fltk3::Input *data_input;
extern fltk3::Input *data_filename;
extern fltk3::Button *data_filebrowser;
extern fltk3::ReturnButton *data_panel_ok;
extern fltk3::Button *data_panel_cancel;
extern fltk3::TextEditor *data_comment_input;
fltk3::DoubleWindow* make_data_panel();
extern fltk3::MenuItem menu_data_choice[];
extern fltk3::MenuItem menu_data_class_choice[];
extern fltk3::DoubleWindow *class_panel;
extern fltk3::LightButton *c_public_button;
extern fltk3::Input *c_name_input;
extern fltk3::Input *c_subclass_input;
extern fltk3::TextEditor *c_comment_input;
extern fltk3::ReturnButton *c_panel_ok;
extern fltk3::Button *c_panel_cancel;
fltk3::DoubleWindow* make_class_panel();
extern fltk3::DoubleWindow *comment_panel;
extern CodeEditor *comment_input;
extern fltk3::ReturnButton *comment_panel_ok;
extern fltk3::Button *comment_panel_cancel;
extern fltk3::LightButton *comment_in_source;
extern fltk3::LightButton *comment_in_header;
#include <fltk3/MenuButton.h>
extern fltk3::MenuButton *comment_predefined;
extern fltk3::Button *comment_load;
fltk3::DoubleWindow* make_comment_panel();
void type_make_cb(fltk3::Widget*,void*d);
#include <fltk3/Window.h>
extern fltk3::Window *widgetbin_panel;
fltk3::Window* make_widgetbin();
extern void toggle_sourceview_cb(fltk3::DoubleWindow*, void*);
extern fltk3::DoubleWindow *sourceview_panel;
#include <fltk3/TabGroup.h>
extern void update_sourceview_position_cb(fltk3::TabGroup*, void*);
extern fltk3::TabGroup *sv_tab;
extern CodeViewer *sv_source;
extern CodeViewer *sv_header;
extern void update_sourceview_cb(fltk3::Button*, void*);
extern fltk3::LightButton *sv_autorefresh;
extern fltk3::LightButton *sv_autoposition;
extern void toggle_sourceview_b_cb(fltk3::Button*, void*);
fltk3::DoubleWindow* make_sourceview();
#endif

//
// End of "$Id$".
//
