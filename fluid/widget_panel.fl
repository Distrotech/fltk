# data file for the FLTK User Interface Designer (FLUID)
version 2.0002 
images_dir ./ 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 11 
snap 2 
theme KDE
Function {make_widget_panel()} {open
} {
  {fltk::Window} {} {open
    xywh {76 374 380 373} resizable hotspot visible
  } {
    {fltk::TabGroup} panel_tabs {
      callback propagate_tabs open
      xywh {0 10 380 331}
    } {
      {fltk::Group} {} {
        label GUI
        callback propagate_group open
        xywh {0 23 380 297} hide
      } {
        {fltk::Input} {} {
          label Class
          user_data 4
          callback user_class_cb
          tooltip {This allows you to name a user-defined class that this widget is an instance of, rather than an fltk built-in class. You will need to add a \#include declaration so that the definition of your class is included in the fluid output.}
          xywh {80 11 170 22} when CHANGED
        }
        {fltk::Choice} {} {
          callback subtype_cb
          tooltip {Selects a value for type() for this widget}
          xywh {250 11 120 22}
        } {}
        {fltk::Input} {} {
          label Label
          callback label_cb
          tooltip {Text displayed on or next to the widget}
          xywh {80 33 290 22} when CHANGED
          extra_code {o->take_focus();}
        }
        {fltk::Widget} image_label {
          label Image
          xywh {9 55 71 22} align 24 box NO_BOX
        }
        {fltk::Button} {} {
          label {Image name}
          callback image_cb
          tooltip {Select an image to label the widget}
          xywh {80 55 220 22} align 20 color 7
        }
        {fltk::CheckButton} include_image_button {
          label inline
          callback image_inlined_cb
          tooltip {The image data is inserted as inline data into the output C++ code, rather than generating code to read the image file.}
          xywh {305 55 50 22} align 148
        }
        {fltk::Widget} {} {
          label Alignment
          xywh {10 77 70 22} align 24 box NO_BOX
        }
        {fltk::Button} {} {
          label {@-1<-}
          user_data {fltk::ALIGN_LEFT}
          callback align_cb
          tooltip {Places label on the left of the widget}
          xywh {80 78 20 20} type TOGGLE
        }
        {fltk::Button} {} {
          label {@-1->}
          user_data {fltk::ALIGN_RIGHT}
          callback align_cb
          tooltip {Places label on the right of the widget}
          xywh {100 78 20 20} type TOGGLE
        }
        {fltk::Button} {} {
          label {@-18}
          user_data {fltk::ALIGN_TOP}
          callback align_cb
          tooltip {Places label on the top of the widget}
          xywh {120 78 20 20} type TOGGLE
        }
        {fltk::Button} {} {
          label {@-12}
          user_data {fltk::ALIGN_BOTTOM}
          callback align_cb
          tooltip {Places label on the bottom of the widget}
          xywh {140 78 20 20} type TOGGLE
        }
        {fltk::Button} {} {
          label inside
          user_data {fltk::ALIGN_INSIDE}
          callback align_cb
          tooltip {Places label inside the widget}
          xywh {165 78 40 20} type TOGGLE
        }
        {fltk::Button} {} {
          label clip
          user_data {fltk::ALIGN_CLIP}
          callback align_cb
          tooltip {Turn on clipping to the widget's area when drawing label.  This is slower so it should be left off if label will fit}
          xywh {205 78 40 20} type TOGGLE
        }
        {fltk::Button} {} {
          label wrap
          user_data {fltk::ALIGN_WRAP}
          callback align_cb
          tooltip {Word-wrap the label}
          xywh {245 78 40 20} type TOGGLE
        }
        {fltk::ValueInput} widget_x {
          label x
          callback x_cb
          tooltip {The x coordinate of the widget.}
          xywh {80 105 55 22} align 20 when ENTER_KEY labelsize 11 maximum 2000 step 1 value 10
        }
        {fltk::ValueInput} widget_y {
          label y
          callback y_cb
          tooltip {The y coordinate of the widget.}
          xywh {135 105 55 22} align 20 when ENTER_KEY labelsize 11 maximum 2000 step 1 value 10
        }
        {fltk::ValueInput} widget_width {
          label w
          callback width_cb
          tooltip {The width of the widget.}
          xywh {190 105 55 22} align 20 when ENTER_KEY labelsize 11 maximum 2000 step 1 value 10
        }
        {fltk::ValueInput} widget_height {
          label h
          callback height_cb
          tooltip {The height of the widget.}
          xywh {245 105 55 22} align 20 when ENTER_KEY labelsize 11 maximum 2000 step 1 value 10
        }
        {fltk::CheckButton} set_xy {
          label {Set xy}
          callback set_xy_cb
          tooltip {Window will use this x,y rather than being positioned by the operating system.}
          xywh {305 105 60 22}
        }
        {fltk::ValueInput} {} {
          label size
          callback slider_size_cb
          tooltip {The size of the scroller}
          xywh {315 105 55 22} align 20 when ENTER_KEY labelsize 11
        }
        {fltk::CheckButton} {} {
          label Border
          callback border_cb
          tooltip {Enable the window manager border}
          xywh {145 132 70 22}
        }
        {fltk::CheckButton} {} {
          label Modal
          callback modal_cb
          tooltip {This window will stay on top of others in the application and will block events from going to other windows until it is hidden or closed.}
          xywh {210 132 70 22}
        }
        {fltk::CheckButton} {} {
          label Child
          callback non_modal_cb
          tooltip {This window will stay on top of others in the application.}
          xywh {290 132 75 22}
        }
        {fltk::ValueInput} {} {
          label Value
          callback value_cb
          tooltip {The initial value of this widget}
          xywh {80 132 55 22} when ENTER_KEY
        }
        {fltk::ValueInput} {} {
          label min
          callback min_cb
          tooltip {The minimum value for this valuator}
          xywh {135 132 55 22} align 20 when ENTER_KEY labelsize 11
        }
        {fltk::ValueInput} {} {
          label max
          callback max_cb
          tooltip {The maximum value for this valuator}
          xywh {190 132 55 22} align 20 when ENTER_KEY labelsize 11 value 1
        }
        {fltk::ValueInput} {} {
          label step
          callback step_cb
          tooltip {step:
Round all movements to multiples of this.
}
          xywh {245 132 60 22} align 20 when ENTER_KEY labelsize 11
        }
        {fltk::ValueInput} {} {
          label line
          callback line_cb
          tooltip {linesize:
Increment/decrement for arrow keys.}
          xywh {305 132 65 22} align 20 when ENTER_KEY labelsize 11 minimum 1 step 1
        }
        {fltk::Group} {} {
          label Attributes
          callback propagate_group open
          xywh {80 158 280 22} align 4
        } {
          {fltk::CheckButton} {} {
            label Visible
            callback visible_cb
            tooltip {If unchecked the widget is initially invisible.}
            xywh {0 0 65 22}
          }
          {fltk::CheckButton} {} {
            label Active
            callback active_cb
            tooltip {If unchecked the widget is initially inactive (disabled, grayed out).}
            xywh {65 0 65 22}
          }
          {fltk::CheckButton} {} {
            label Resizable
            callback resizable_cb
            tooltip {If on, this widget and all it's parents are resizable.  When the parent resizes it moves/resizes all it's children so that this widget's edges remain the same distance from all four sides of the parent.  If this is off this widget will not resize, unless it overlaps a resizable sibling.}
            xywh {130 0 80 22}
          }
          {fltk::CheckButton} {} {
            label Hotspot
            callback hotspot_cb
            tooltip {Positions the window so this widget is under the mouse.  This is done when show() is called.}
            xywh {210 0 70 22}
          }
        }
        {fltk::Button} {} {
          label Shortcut
          callback shortcut_in_cb
          tooltip {To set a shortcut:
   Click here, then type the key combination you want.
To delete the shortcut:
   Click here, then type backspace.
To get out of shortcut-setting mode:
   Click the mouse on this again, or on some other field.}
          xywh {80 181 290 22} align 4 color 7
          extra_code {\#include "Shortcut_Button.h"}
          class Shortcut_Button
        }
        {fltk::Input} {} {
          label Tooltip
          callback tooltip_cb
          tooltip {The pop up tooltip which should be used for the widget.}
          xywh {80 209 290 78} type Wordwrap box BORDER_BOX color 0xffffe100
        }
        {fltk::Widget} {} {
          label resizable
          xywh {80 220 275 67} hide deactivate resizable
        }
        {fltk::Widget} {} {
          label Dimensions
          xywh {10 105 70 22} align 24 box NO_BOX
        }
      }
      {fltk::Group} {} {
        label Style
        callback propagate_group open
        xywh {0 23 380 297}
      } {
        {fltk::Choice} {} {
          label Box
          callback box_cb selected
          tooltip {Type of box to draw around the contents of the widget.}
          xywh {85 9 270 22}
        } {}
        {fltk::LightButton} {} {
          label Color
          callback color_cb selected
          tooltip {Color of the contents area.}
          xywh {85 31 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Text Color}
          callback text_color_cb selected
          tooltip {Color of text drawn in the widget.}
          xywh {220 31 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Selection Color}
          callback selection_color_cb selected
          tooltip {Color to draw behind selected text}
          xywh {85 53 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Selected Text Color}
          callback selected_text_color_cb selected
          tooltip {Color to draw selected text}
          xywh {220 53 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::Choice} {} {
          label {Button box}
          callback button_box_cb open selected
          tooltip {Type of box to draw around buttons}
          xywh {85 88 270 22}
        } {}
        {fltk::LightButton} {} {
          label {Button Color}
          callback button_color_cb selected
          tooltip {Color to draw buttons inside the widget.}
          xywh {85 110 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Label Color}
          callback label_color_cb selected
          tooltip {Color to draw the labels on buttons, and color to draw the label.}
          xywh {220 110 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Highlight Color}
          callback highlight_color_cb selected
          tooltip {Color to use to draw buttons when they are highlighted.  Use color zero (the black top-left chip in the color chooser) to disable highlighting.}
          xywh {85 132 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::LightButton} {} {
          label {Highlight Label Color}
          callback highlight_label_color_cb selected
          tooltip {Color to draw the button labels when the buttons are highlighted.  Use color zero (the black top-left chip in the color chooser) to leave the label colors unchanged.}
          xywh {220 132 135 22} labelsize 11
          extra_code {o->type(0);}
        }
        {fltk::Choice} {} {
          label {Label Style}
          callback label_style_cb open selected
          tooltip {How to draw the label.}
          xywh {85 165 270 22}
        } {}
        {fltk::Choice} {} {
          label {Label Font}
          callback label_font_cb open selected
          tooltip {Font to use for the label}
          xywh {85 187 215 22}
        } {}
        {fltk::ValueInput} {} {
          callback label_size_cb selected
          tooltip {Size of the font to use for the label}
          xywh {300 187 55 22} when ENTER_KEY maximum 100 step 0.1 value 14
        }
        {fltk::Choice} {} {
          label {Text Font}
          callback text_font_cb open selected
          tooltip {Font to use for text displayed inside the widget}
          xywh {85 220 215 22}
        } {}
        {fltk::ValueInput} {} {
          callback text_size_cb selected
          tooltip {Size of the font to use for text displayed inside the widget}
          xywh {300 220 55 22} when ENTER_KEY maximum 100 step 0.1 value 14
        }
        {fltk::Widget} {} {
          label resizable selected
          xywh {85 242 270 3} hide deactivate resizable
        }
        {fltk::Button} {} {
          label {Reset to default}
          callback default_cb selected
          tooltip {Reset all the above items to the default values for this widget class.}
          xywh {85 253 124 22}
        }
      }
      {fltk::Group} {} {
        label {C++}
        callback propagate_group open
        xywh {0 23 380 302} hide resizable
      } {
        {fltk::Input} {} {
          label Name
          callback name_cb
          tooltip {The variable or member name in which to store a pointer to this widget.}
          xywh {80 11 230 22} when CHANGED
        }
        {fltk::CheckButton} {} {
          label public
          callback name_public_cb
          tooltip {Make the variable public}
          xywh {315 11 50 22}
        }
        {fltk::Input} extra_code_input {
          label {Extra Code}
          user_data 0
          callback extra_code_input_cb
          tooltip {Extra code to be exectuted after the widget is created. The variable "o" points at the widget.}
          xywh {80 44 285 99} type Multiline
        }
        {fltk::Input} {} {
          label Callback
          callback callback_cb
          tooltip {The name of the callback function, or code body of the callback function}
          xywh {80 154 285 99} type Multiline
        }
        {fltk::Widget} {} {
          label resizable
          xywh {80 165 165 65} hide deactivate resizable
        }
        {fltk::Input} {} {
          label {User Data}
          callback user_data_cb
          tooltip {Value passed as the second argument to the callback.  This must be of the type given below.}
          xywh {80 253 145 22}
        }
        {fltk::Choice} {} {
          label When
          callback when_cb
          tooltip {What actions cause the callback to be called.}
          xywh {265 253 100 22} when NEVER
        } {}
        {fltk::Input} {} {
          label Type
          callback user_data_type_cb
          tooltip {Type of User Data. This must be "long" or a pointer.}
          xywh {80 275 145 22}
        }
      }
    }
    {fltk::Group} {} {open
      xywh {95 340 275 25} resizable
    } {
      {fltk::CheckButton} overlaybutton {
        label {&Overlays}
        callback overlay_cb
        tooltip {Turns the overlays (red outlines) off so you can see the edges better.}
        xywh {0 0 120 22} resizable
        extra_code {extern bool overlays_invisible;
o->value(!overlays_invisible);}
      }
      {fltk::ReturnButton} {} {
        label OK
        callback ok_cb
        tooltip {Closes this attribute window}
        xywh {130 0 65 22} shortcut 0xff0d
      }
      {fltk::Button} {} {
        label Cancel
        callback cancel_cb
        tooltip {Sorry, cancel does not really work yet.}
        xywh {205 0 65 22}
      }
    }
  }
} 
